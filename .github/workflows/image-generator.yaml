name: Raspberry Pi Camera Setup

on:
  release:
    types: [published]
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create custom stage
        run: |
          # Create custom stage directory
          mkdir -p camera-stage

          # Create packages list
          cat << EOF > camera-stage/00-packages
          python3-picamera2
          python3-websockets
          EOF

          # Create setup script
          cat << 'EOF' > camera-stage/01-run-chroot.sh
          #!/bin/bash -e

          # Create inky user
          useradd -m -s /bin/bash -G sudo,adm,dialout,cdrom,audio,video,plugdev,games,users,input,netdev,gpio,i2c,spi inky
          echo "inky:inkycamera" | chpasswd

          # Copy camera files
          cp /tmp/camera_server.py /home/inky/
          cp /tmp/camera.service /etc/systemd/system/

          # Set permissions
          chown -R inky:inky /home/inky

          # Enable service
          systemctl enable camera.service
          EOF
          chmod +x camera-stage/01-run-chroot.sh

          # Create copy files script
          mkdir -p camera-stage/files
          cp ./src/camera_server.py camera-stage/files/
          cp ./src/camera.service camera-stage/files/

          cat << 'EOF' > camera-stage/02-run.sh
          #!/bin/bash -e
          cp files/camera_server.py "${ROOTFS_DIR}/tmp/"
          cp files/camera.service "${ROOTFS_DIR}/tmp/"
          EOF
          chmod +x camera-stage/02-run.sh

      - name: Build image
        uses: usimd/pi-gen-action@v1
        with:
          image-name: raspios-camera-ssh-usb
          stage-list: stage0 stage1 stage2 ./camera-stage
          enable-ssh: 1
          hostname: inky
          username: inky
          password: inkycamera
          compression: xz

      - name: Upload image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: raspberry-pi-camera-image
          path: pi-gen/deploy/*.img.xz

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: pi-gen/deploy/*.img.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
